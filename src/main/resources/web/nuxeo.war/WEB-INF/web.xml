<?xml version="1.0" ?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
  version="2.4">

  <listener>
    <listener-class>com.sun.faces.config.ConfigureListener</listener-class>
  </listener>

  
<listener>
    <listener-class>org.jboss.seam.servlet.SeamListener</listener-class>
</listener>

<listener>
    <listener-class>
        <!-- this is a wrapper that holds off running GuiceContextListener
        (the real listener) until Nuxeo is fully initialized -->
        org.nuxeo.opensocial.servlet.ContextListenerDelayer
      </listener-class>
</listener>

<listener>
    <listener-class>
        org.nuxeo.ecm.core.opencmis.bindings.NuxeoCmisContextListener
      </listener-class>
</listener>

<listener>
    <listener-class>org.nuxeo.ecm.webapp.seam.NuxeoSeamWebGate</listener-class>
</listener>

<listener>
    <listener-class>
        com.sun.xml.ws.transport.http.servlet.WSServletContextListener
      </listener-class>
</listener>

<listener>
    <listener-class>
        org.nuxeo.opensocial.container.server.guice.GuiceServletConfig
      </listener-class>
</listener>


  
<!-- put encoding filter with expection filter to make sure it's
      registered first -->
<filter>
    <display-name>Nuxeo Encoding Filter</display-name>
    <filter-name>NuxeoEncodingFilter</filter-name>
    <filter-class>
        org.nuxeo.ecm.platform.web.common.encoding.NuxeoEncodingFilter
      </filter-class>
</filter>
<filter-mapping>
    <filter-name>NuxeoEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter>
    <display-name>Nuxeo Exception Filter</display-name>
    <filter-name>NuxeoExceptionFilter</filter-name>
    <filter-class>
        org.nuxeo.ecm.platform.web.common.exceptionhandling.NuxeoExceptionFilter
      </filter-class>
</filter>
<filter-mapping>
    <filter-name>NuxeoExceptionFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>


  
<filter>
    <filter-name>authFilter</filter-name>
    <!-- this is a wrapper that holds off running the shindig
      authentication filter until the framework is fully initialized -->
    <filter-class>org.nuxeo.opensocial.servlet.AuthenticationFilterDelayer
      </filter-class>
</filter>

<listener>
    <listener-class>org.nuxeo.ecm.platform.web.common.session.NuxeoSessionListener</listener-class>
</listener>
<filter>
    <display-name>Nuxeo Request Controller Filter</display-name>
    <filter-name>NuxeoRequestController</filter-name>
    <filter-class>
        org.nuxeo.ecm.platform.web.common.requestcontroller.filter.NuxeoRequestControllerFilter
      </filter-class>
</filter>
<filter>
    <display-name>Nuxeo Authentication Filter</display-name>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <filter-class>
        org.nuxeo.ecm.platform.ui.web.auth.NuxeoAuthenticationFilter
      </filter-class>
</filter>


  
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/site/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<!-- auth filter configuration, filter is defined in web-common -->
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>*.faces</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>*.seam</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nxdoc/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nxpath/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nxfile/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/seam/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/restAPI/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/ws/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/webservices/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter
      </filter-name>
    <url-pattern>/opensocial/gadgets/ifr/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter
      </filter-name>
    <url-pattern>/opensocial/social/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter
      </filter-name>
    <url-pattern>/opensocial/gadgets/makeRequest</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoRequestController</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nxbigfile/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nxbigzipfile/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nxdownloadinfo/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/logout</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/atom/cmis/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/json/cmis/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/_vti_bin/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nuxeo/_vti_bin/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter>
    <display-name>Nuxeo Windows Integration Request Filter</display-name>
    <filter-name>WIRequestFilter</filter-name>
    <filter-class>
                org.nuxeo.ecm.platform.wi.filter.WIRequestFilter
            </filter-class>
</filter>
<filter-mapping>
    <filter-name>WIRequestFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nxpicsfile/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<!-- auth filter configuration, filter is defined in web-common -->
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nxsrch/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nxadmin/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/nxhome/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/user/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter
           </filter-name>
    <url-pattern>/oauthGrant.jsp</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter
            </filter-name>
    <url-pattern>/oauth/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>


  <!-- XXX AT: for org.nuxeo.ecm.platform.ui.web module: order of filters matters.
    Others modules should use FILTER. -->
  
<filter>
    <display-name>Nuxeo Fancy URL Filter</display-name>
    <filter-name>NuxeoFancyURLFilter</filter-name>
    <filter-class>
        org.nuxeo.ecm.platform.ui.web.rest.FancyURLFilter
      </filter-class>
    <init-param>
        <param-name>EnableFancyURLParsing</param-name>
        <param-value>false</param-value>
    </init-param>
    <init-param>
        <param-name>EnableFancyURLRedirect</param-name>
        <param-value>false</param-value>
    </init-param>
</filter>
<filter-mapping>
    <filter-name>NuxeoFancyURLFilter</filter-name>
    <url-pattern>/*</url-pattern>
</filter-mapping>


  
<filter>
    <filter-name>Seam Filter</filter-name>
    <filter-class>org.jboss.seam.servlet.SeamFilter</filter-class>
</filter>
<filter-mapping>
    <filter-name>Seam Filter</filter-name>
    <url-pattern>*.seam</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>Seam Filter</filter-name>
    <url-pattern>*.faces</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>Seam Filter</filter-name>
    <url-pattern>*.xhtml</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter>
    <filter-name>Seam Context Filter</filter-name>
    <filter-class>org.jboss.seam.web.ContextFilter</filter-class>
</filter>

<filter>
    <display-name>Nuxeo Simple Cache Filter</display-name>
    <filter-name>simpleCacheFilter</filter-name>
    <filter-class>
        org.nuxeo.ecm.platform.ui.web.cache.SimpleCacheFilter
      </filter-class>
    <init-param>
        <param-name>cacheTime</param-name>
        <param-value>3600</param-value>
    </init-param>
</filter>

<filter>
    <display-name>WSS Filter</display-name>
    <filter-name>WSSFilter</filter-name>
    <filter-class>org.nuxeo.wss.servlet.FailSafeWSSFilter</filter-class>
    <init-param>
        <param-name>org.nuxeo.wss.backendFactory</param-name>
        <param-value>org.nuxeo.ecm.platform.wi.service.PluggableBackendFactory</param-value>
    </init-param>
    <init-param>
        <param-name>org.nuxeo.wss.webdav.base.url</param-name>
        <param-value>/site/dav</param-value>
    </init-param>
</filter>
<filter-mapping>
    <filter-name>WSSFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>

<filter>
    <filter-name>guiceFilter</filter-name>
    <filter-class>
        com.google.inject.servlet.GuiceFilter
      </filter-class>
</filter>


  
<filter-mapping>
    <filter-name>authFilter</filter-name>
    <url-pattern>/opensocial/social/*</url-pattern>
</filter-mapping>
<filter-mapping>
    <filter-name>authFilter</filter-name>
    <url-pattern>/opensocial/gadgets/ifr</url-pattern>
</filter-mapping>
<filter-mapping>
    <filter-name>authFilter</filter-name>
    <url-pattern>/opensocial/gadgets/makeRequest</url-pattern>
</filter-mapping>
<filter-mapping>
    <filter-name>authFilter</filter-name>
    <url-pattern>/opensocial/gadgets/api/rpc/*</url-pattern>
</filter-mapping>
<filter-mapping>
    <filter-name>authFilter</filter-name>
    <url-pattern>/opensocial/gadgets/api/rest/*</url-pattern>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/adnotatio.HtmlAnnotatorClient/*</url-pattern>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>
        /org.nuxeo.ecm.platform.annotations.gwt.AnnotationFrameModule/webConfiguration
      </url-pattern>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>
        /org.nuxeo.ecm.platform.annotations.gwt.AnnotationModule/webConfiguration
      </url-pattern>
</filter-mapping>

<!-- Seam Context Filter is declared in org.nuxeo.ecm.platform.ui.web
      deployment fragment -->
<filter-mapping>
    <filter-name>Seam Context Filter</filter-name>
    <url-pattern>/DocumentManagerWS</url-pattern>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/Annotations/*</url-pattern>
</filter-mapping>

<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/gwtContainer/dispatch</url-pattern>
</filter-mapping>
<filter-mapping>
    <filter-name>guiceFilter</filter-name>
    <url-pattern>/gwtContainer/dispatch</url-pattern>
</filter-mapping>


  
<context-param>
    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
    <!-- XXX warning: before changing this value, note that some libraries may
        not like the client saving method (gwt for instance) -->
    <!-- <param-value>client</param-value> -->
    <param-value>server</param-value>
</context-param>
<context-param>
    <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
    <param-value>.xhtml</param-value>
</context-param>
<context-param>
    <param-name>facelets.LIBRARIES</param-name>
    <param-value>
        /WEB-INF/nxdirectory.taglib.xml;
        /WEB-INF/nxweb-html.taglib.xml;
        /WEB-INF/nxweb-util.taglib.xml;
        /WEB-INF/nxweb-document.taglib.xml;
        /WEB-INF/nxweb-ajax4jsf.taglib.xml;
        /WEB-INF/nxweb-pdf.taglib.xml;
        /WEB-INF/nx-seam-excel.taglib.xml;
        /WEB-INF/nx-seam-rss.taglib.xml;
      </param-value>
</context-param>
<context-param>
    <param-name>facelets.DEVELOPMENT</param-name>
    <param-value>false</param-value>
</context-param>
<context-param>
    <param-name>facelets.REFRESH_PERIOD</param-name>
    <param-value>-1</param-value>
</context-param>
<context-param>
    <param-name>com.sun.faces.responseBufferSize</param-name>
    <param-value>500000</param-value>
</context-param>
<context-param>
    <param-name>facelets.BUFFER_SIZE</param-name>
    <param-value>500000</param-value>
</context-param>
<context-param>
    <param-name>com.sun.faces.numberOfViewsInSession</param-name>
    <param-value>50</param-value>
</context-param>
<context-param>
    <param-name>com.sun.faces.numberOfLogicalViews</param-name>
    <param-value>50</param-value>
</context-param>
<context-param>
    <param-name>org.richfaces.LoadStyleStrategy</param-name>
    <param-value>ALL</param-value>
</context-param>
<context-param>
    <param-name>org.richfaces.LoadScriptStrategy</param-name>
    <param-value>ALL</param-value>
</context-param>
<context-param>
    <param-name>
        org.nuxeo.ecm.platform.web.common.resources.JSMinimizer
      </param-name>
    <param-value>
        org.nuxeo.ecm.platform.ui.web.richfaces.RichFacesJSMinimizer
      </param-value>
</context-param>
<context-param>
    <param-name>org.ajax4jsf.CONTROL_COMPONENTS</param-name>
    <param-value>
        org.nuxeo.ecm.platform.ui.web.binding.alias.UIAliasHolder
      </param-value>
</context-param>

<context-param>
    <param-name>guice-modules</param-name>
    <!-- NOTE NOTE NOTE -->
    <!--
        org.apache.shindig.gadgets.oauth.OAuthModule: is not in this list
        anymore because we must merge the bindings for this class with
        some other bindings provided by nuxeo

-->
    <param-value>
        org.nuxeo.opensocial.shindig.NuxeoPropertiesModule:
        org.nuxeo.opensocial.services.NXGuiceModule:
        org.nuxeo.opensocial.services.NuxeoServiceModule:
        org.nuxeo.opensocial.services.NuxeoCryptoModule:
        org.apache.shindig.social.core.config.SocialApiGuiceModule:
        org.nuxeo.opensocial.shindig.gadgets.NXGadgetModule:
        org.apache.shindig.common.cache.ehcache.EhCacheModule
      </param-value>
</context-param>


  
<!-- Plugging the "BlueGrayDM" skin into the project -->
<context-param>
    <param-name>org.richfaces.SKIN</param-name>
    <param-value>blueGrayDM</param-value>
</context-param>


  

  
<servlet>
    <servlet-name>Nuxeo Resource Servlet</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.webengine.servlet.ResourceServlet
      </servlet-class>
    <init-param>
        <param-name>prefix</param-name>
        <param-value>/nuxeo/site/skin</param-value>
    </init-param>
    <!-- this is required so that prefix param is initialized before webengine is started -->
    <load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
    <servlet-name>Nuxeo Resource Servlet</servlet-name>
    <url-pattern>/site/skin/*</url-pattern>
</servlet-mapping>
<servlet>
    <servlet-name>Nuxeo WebEngine Servlet</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.webengine.app.jersey.WebEngineServlet
      </servlet-class>
    <!-- servlet-class>org.nuxeo.ecm.webengine.app.jersey.ReloadingJerseyServlet</servlet-class>
        <init-param>
        <param-name>javax.ws.rs.Application</param-name>
        <param-value>org.nuxeo.ecm.webengine.app.WebEngineApplication</param-value>
        </init-param-->
</servlet>
<servlet-mapping>
    <servlet-name>Nuxeo WebEngine Servlet</servlet-name>
    <url-pattern>/site/*</url-pattern>
</servlet-mapping>
<filter>
    <display-name>RequestContextFilter</display-name>
    <filter-name>RequestContextFilter</filter-name>
    <filter-class>
        org.nuxeo.ecm.webengine.jaxrs.context.RequestContextFilter
      </filter-class>
</filter>
<filter-mapping>
    <filter-name>RequestContextFilter</filter-name>
    <url-pattern>/site/*</url-pattern>
</filter-mapping>
<filter>
    <display-name>WebEngineFilter</display-name>
    <filter-name>WebEngineFilter</filter-name>
    <filter-class>org.nuxeo.ecm.webengine.app.WebEngineFilter</filter-class>
</filter>
<filter-mapping>
    <filter-name>WebEngineFilter</filter-name>
    <url-pattern>/site/*</url-pattern>
</filter-mapping>
<filter>
    <display-name>SessionCleanupFilter</display-name>
    <filter-name>SessionCleanupFilter</filter-name>
    <filter-class>
        org.nuxeo.ecm.webengine.jaxrs.session.SessionCleanupFilter
      </filter-class>
</filter>
<filter-mapping>
    <filter-name>SessionCleanupFilter</filter-name>
    <url-pattern>/site/*</url-pattern>
</filter-mapping>

<servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.faces</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.jsf</url-pattern>
</servlet-mapping>
<servlet>
    <servlet-name>Seam Ressource Servlet</servlet-name>
    <servlet-class>org.jboss.seam.servlet.SeamResourceServlet</servlet-class>
</servlet>
<servlet-mapping>
    <servlet-name>Seam Ressource Servlet</servlet-name>
    <url-pattern>/seam/resource/*</url-pattern>
</servlet-mapping>
<servlet>
    <servlet-name>Nuxeo Restlet Servlet</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.platform.ui.web.restAPI.RestletServlet
      </servlet-class>
</servlet>
<servlet-mapping>
    <servlet-name>Nuxeo Restlet Servlet</servlet-name>
    <url-pattern>/restAPI/*</url-pattern>
</servlet-mapping>
<servlet>
    <servlet-name>Document Store Servlet</servlet-name>
    <servlet-class>
        org.jboss.seam.document.DocumentStoreServlet
      </servlet-class>
</servlet>
<servlet-mapping>
    <servlet-name>Document Store Servlet</servlet-name>
    <url-pattern>*.pdf</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>Document Store Servlet</servlet-name>
    <url-pattern>*.csv</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>Document Store Servlet</servlet-name>
    <url-pattern>*.xls</url-pattern>
</servlet-mapping>

<!-- Render a Gadget -->
<servlet>
    <servlet-name>xml-to-html</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.GadgetRenderingServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>proxy</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.NXProxyServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>makeRequest</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.MakeRequestServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>concat</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.NXConcatProxyServlet
    </servlet-class>
</servlet>
<servlet>
    <servlet-name>oauthCallback</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.OAuthCallbackServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>metadata</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.RpcServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>js</servlet-name>
    <servlet-class>org.apache.shindig.gadgets.servlet.JsServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>socialRestapiServlet</servlet-name>
    <servlet-class>
        org.apache.shindig.protocol.DataServiceServlet
      </servlet-class>
    <init-param>
        <param-name>handlers</param-name>
        <param-value>org.apache.shindig.social.handlers</param-value>
    </init-param>
</servlet>
<servlet>
    <servlet-name>socialJsonRpcServlet</servlet-name>
    <servlet-class>
        org.apache.shindig.protocol.JsonRpcServlet
      </servlet-class>
    <init-param>
        <param-name>handlers</param-name>
        <param-value>org.apache.shindig.social.handlers</param-value>
    </init-param>
</servlet>
<servlet>
    <servlet-name>gadgetsJsonRpcServlet</servlet-name>
    <servlet-class>
        org.apache.shindig.protocol.JsonRpcServlet
      </servlet-class>
    <init-param>
        <param-name>handlers</param-name>
        <param-value>org.apache.shindig.gadgets.handlers</param-value>
    </init-param>
</servlet>
<servlet>
    <servlet-name>gadgetsRestapiServlet</servlet-name>
    <servlet-class>
        org.apache.shindig.protocol.DataServiceServlet
      </servlet-class>
    <init-param>
        <param-name>handlers</param-name>
        <param-value>org.apache.shindig.gadgets.handlers</param-value>
    </init-param>
</servlet>

<servlet>
    <servlet-name>Nuxeo Downloader</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.platform.ui.web.download.DownloadServlet
      </servlet-class>
</servlet>
<servlet-mapping>
    <servlet-name>Nuxeo Downloader</servlet-name>
    <url-pattern>/nxbigfile/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>Nuxeo Downloader</servlet-name>
    <url-pattern>/nxbigzipfile/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>Nuxeo Downloader</servlet-name>
    <url-pattern>/nxdownloadinfo/*</url-pattern>
</servlet-mapping>
<servlet>
    <servlet-name>Nuxeo JS Provider</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.platform.web.common.resources.AggregatedJSProvider
      </servlet-class>
</servlet>
<servlet-mapping>
    <servlet-name>Nuxeo JS Provider</servlet-name>
    <url-pattern>/js/*</url-pattern>
</servlet-mapping>
<servlet>
    <servlet-name>Nuxeo Ajax Proxy</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.platform.web.common.ajax.AjaxProxyServlet
      </servlet-class>
</servlet>
<servlet-mapping>
    <servlet-name>Nuxeo Ajax Proxy</servlet-name>
    <url-pattern>/ajaxProxy/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>Nuxeo Ajax Proxy</servlet-name>
    <url-pattern>/proxy/ajaxProxy.php</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>Nuxeo Ajax Proxy</servlet-name>
    <url-pattern>/proxy/xmlProxy.php</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>Nuxeo Ajax Proxy</servlet-name>
    <url-pattern>/proxy/feedProxy.php</url-pattern>
</servlet-mapping>

<servlet>
    <servlet-name>atomcmis</servlet-name>
    <servlet-class>
        org.apache.chemistry.opencmis.server.impl.atompub.CmisAtomPubServlet
      </servlet-class>
    <init-param>
        <param-name>callContextHandler</param-name>
        <param-value>org.nuxeo.ecm.core.opencmis.bindings.NuxeoAuthCallContextHandler</param-value>
    </init-param>
</servlet>

<servlet>
    <servlet-name>jsoncmis</servlet-name>
    <servlet-class>
        org.apache.chemistry.opencmis.server.impl.browser.CmisBrowserBindingServlet
      </servlet-class>
    <init-param>
        <param-name>callContextHandler</param-name>
        <param-value>org.nuxeo.ecm.core.opencmis.bindings.NuxeoAuthCallContextHandler</param-value>
    </init-param>
</servlet>

<servlet>
    <servlet-name>Web configuration servlet</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.platform.annotations.gwt.server.configuration.WebConfigurationServiceImpl
      </servlet-class>
    <load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
    <servlet-name>Web configuration servlet</servlet-name>
    <url-pattern>
        /org.nuxeo.ecm.platform.annotations.gwt.AnnotationFrameModule/webConfiguration
      </url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>Web configuration servlet</servlet-name>
    <url-pattern>
        /org.nuxeo.ecm.platform.annotations.gwt.AnnotationModule/webConfiguration
      </url-pattern>
</servlet-mapping>



<servlet>
    <description>JAX-WS Webservices</description>
    <display-name>MetroWS</display-name>
    <servlet-name>MetroWSServlet</servlet-name>
    <servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet
      </servlet-class>
    <load-on-startup>1</load-on-startup>
</servlet>

<servlet>
    <servlet-name>NXThemes Resource Library</servlet-name>
    <servlet-class>org.nuxeo.theme.html.servlets.Resources</servlet-class>
</servlet>
<servlet>
    <servlet-name>NXThemes CSS</servlet-name>
    <servlet-class>org.nuxeo.theme.html.servlets.Styles</servlet-class>
</servlet>
<servlet>
    <servlet-name>NXThemes Images</servlet-name>
    <servlet-class>org.nuxeo.theme.html.servlets.Images</servlet-class>
</servlet>
<servlet>
    <servlet-name>NXThemes Negotiation Selector</servlet-name>
    <servlet-class>
        org.nuxeo.theme.html.servlets.NegotiationSelector
      </servlet-class>
</servlet>

<servlet>
    <servlet-name>Annotation Servlet</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.platform.annotations.http.AnnotationsServlet
      </servlet-class>
    <load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
    <servlet-name>Annotation Servlet</servlet-name>
    <url-pattern>/Annotations/*</url-pattern>
</servlet-mapping>
<servlet>
    <servlet-name>Annotation Body Servlet</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.platform.annotations.http.AnnotationsBodyServlet
      </servlet-class>
    <load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
    <servlet-name>Annotation Body Servlet</servlet-name>
    <url-pattern>/Annotations/body/*</url-pattern>
</servlet-mapping>

<servlet>
    <servlet-name>UploadServlet</servlet-name>
    <servlet-class>org.nuxeo.gwt.habyt.upload.server.UploadServlet</servlet-class>
</servlet>

<!--
      Declare this module in a separate application so
      that it does not interfere with other jax-rs application
      (including webengine apps).
      
      The application name has to match the host name set in MANIFEST.MF 
    -->
<servlet>
    <servlet-name>Nuxeo Webdav Servlet</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.webengine.app.jersey.WebEngineServlet
      </servlet-class>
    <init-param>
        <param-name>application.name</param-name>
        <param-value>nuxeo-webdav</param-value>
    </init-param>
</servlet>
<servlet-mapping>
    <servlet-name>Nuxeo Webdav Servlet</servlet-name>
    <url-pattern>/site/dav/*</url-pattern>
</servlet-mapping>


  
<servlet-mapping>
    <servlet-name>js</servlet-name>
    <url-pattern>/opensocial/gadgets/js/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>proxy</servlet-name>
    <url-pattern>/opensocial/gadgets/proxy/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>makeRequest</servlet-name>
    <url-pattern>/opensocial/gadgets/makeRequest</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>gadgetsJsonRpcServlet</servlet-name>
    <url-pattern>/opensocial/gadgets/api/rpc/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>gadgetsRestapiServlet</servlet-name>
    <url-pattern>/opensocial/gadgets/api/rest/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>concat</servlet-name>
    <url-pattern>/opensocial/gadgets/concat</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>oauthCallback</servlet-name>
    <url-pattern>/opensocial/gadgets/oauthcallback</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>xml-to-html</servlet-name>
    <url-pattern>/opensocial/gadgets/ifr</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>metadata</servlet-name>
    <url-pattern>/opensocial/gadgets/metadata</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>socialRestapiServlet</servlet-name>
    <url-pattern>/opensocial/social/rest/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>socialJsonRpcServlet</servlet-name>
    <url-pattern>/opensocial/social/rpc/*</url-pattern>
</servlet-mapping>

<servlet-mapping>
    <servlet-name>atomcmis</servlet-name>
    <url-pattern>/atom/cmis/*</url-pattern>
</servlet-mapping>

<servlet-mapping>
    <servlet-name>jsoncmis</servlet-name>
    <url-pattern>/json/cmis/*</url-pattern>
</servlet-mapping>



<servlet-mapping>
    <servlet-name>MetroWSServlet</servlet-name>
    <url-pattern>/webservices/*</url-pattern>
</servlet-mapping>

<servlet-mapping>
    <servlet-name>NXThemes Resource Library</servlet-name>
    <url-pattern>/nxthemes-lib/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>NXThemes CSS</servlet-name>
    <url-pattern>/nxthemes-css/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>NXThemes Images</servlet-name>
    <url-pattern>/nxthemes-images/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>NXThemes Negotiation Selector</servlet-name>
    <url-pattern>/nxthemes-select/*</url-pattern>
</servlet-mapping>

<servlet-mapping>
    <servlet-name>UploadServlet</servlet-name>
    <url-pattern>/gwtContainer/upload</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>UploadServlet</servlet-name>
    <url-pattern>/gwtContainer/upload/*</url-pattern>
</servlet-mapping>


  
<error-page>
    <error-code>404</error-code>
    <location>/page_not_found.jsp</location>
</error-page>


  

  
<servlet>
    <servlet-name>Nuxeo Status Servlet</servlet-name>
    <servlet-class>org.nuxeo.ecm.core.management.statuses.StatusServlet
      </servlet-class>
    <load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
    <servlet-name>Nuxeo Status Servlet</servlet-name>
    <url-pattern>/runningstatus</url-pattern>
</servlet-mapping>


  <security-role>
    <description>The role required to access restricted content</description>
    <role-name>admin</role-name>
  </security-role>

  <security-role>
    <description>The role required to access restricted content</description>
    <role-name>regular</role-name>
  </security-role>

  <session-config>
    <session-timeout>2</session-timeout>
  </session-config>

</web-app>
